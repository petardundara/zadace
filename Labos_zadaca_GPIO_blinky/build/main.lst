ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "i2s.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "usb_host.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** # include "stm32f4xx_hal.h"
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** int main(void) {
  64:Core/Src/main.c **** HAL_Init ();
  65:Core/Src/main.c **** SystemClock_Config ();
  66:Core/Src/main.c **** MX_GPIO_Init();
  67:Core/Src/main.c **** while(1){
  68:Core/Src/main.c ****   while (1)
  69:Core/Src/main.c ****   {
  70:Core/Src/main.c ****     /* USER CODE END WHILE */
  71:Core/Src/main.c **** 	  for (int i=0; i <1000000; i ++);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 1); // turn on
  74:Core/Src/main.c **** 	  gpio_led_state ( LED4_GREEN_ID , 1); // turn on
  75:Core/Src/main.c **** 	  gpio_led_state ( LED5_RED_ID , 0); // turn off
  76:Core/Src/main.c **** 	  gpio_led_state ( LED6_BLUE_ID , 0); // turn off
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** 	  for (int i=0; i <1000000; i ++);
  79:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
  80:Core/Src/main.c **** 	  gpio_led_state ( LED4_GREEN_ID , 0); // turn off
  81:Core/Src/main.c **** 	  gpio_led_state ( LED5_RED_ID , 1); // turn on
  82:Core/Src/main.c **** 	  gpio_led_state ( LED6_BLUE_ID , 1); // turn on
  83:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  84:Core/Src/main.c ****   }
  85:Core/Src/main.c **** };
  86:Core/Src/main.c **** }
  87:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /**
  90:Core/Src/main.c ****   * @brief  The application entry point.
  91:Core/Src/main.c ****   * @retval int
  92:Core/Src/main.c ****   */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief System Clock Configuration
  96:Core/Src/main.c ****   * @retval None
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** void SystemClock_Config(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 101:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 106:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 109:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 112:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 113:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 114:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 115:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 119:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     Error_Handler();
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 127:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 128:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     Error_Handler();
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /* USER CODE END 4 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /**
 144:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 4


 145:Core/Src/main.c ****   * @retval None
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c **** void Error_Handler(void)
 148:Core/Src/main.c **** {
  29              		.loc 1 148 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 149:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 150:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 151:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 151 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 5


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 6


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 7


 152:Core/Src/main.c ****   while (1)
  51              		.loc 1 152 3 discriminator 1 view .LVU4
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****   }
  52              		.loc 1 154 3 discriminator 1 view .LVU5
 152:Core/Src/main.c ****   while (1)
  53              		.loc 1 152 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE132:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB131:
  99:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 99 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 100:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 100 3 view .LVU8
 100:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 100 22 is_stmt 0 view .LVU9
  80 0004 3022     		movs	r2, #48
  81 0006 0021     		movs	r1, #0
  82 0008 08A8     		add	r0, sp, #32
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 101:Core/Src/main.c **** 
  85              		.loc 1 101 3 is_stmt 1 view .LVU10
 101:Core/Src/main.c **** 
  86              		.loc 1 101 22 is_stmt 0 view .LVU11
  87 000e 0023     		movs	r3, #0
  88 0010 0393     		str	r3, [sp, #12]
  89 0012 0493     		str	r3, [sp, #16]
  90 0014 0593     		str	r3, [sp, #20]
  91 0016 0693     		str	r3, [sp, #24]
  92 0018 0793     		str	r3, [sp, #28]
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  93              		.loc 1 105 3 is_stmt 1 view .LVU12
  94              	.LBB6:
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  95              		.loc 1 105 3 view .LVU13
  96 001a 0193     		str	r3, [sp, #4]
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  97              		.loc 1 105 3 view .LVU14
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 8


  98 001c 1F4A     		ldr	r2, .L9
  99 001e 116C     		ldr	r1, [r2, #64]
 100 0020 41F08051 		orr	r1, r1, #268435456
 101 0024 1164     		str	r1, [r2, #64]
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 102              		.loc 1 105 3 view .LVU15
 103 0026 126C     		ldr	r2, [r2, #64]
 104 0028 02F08052 		and	r2, r2, #268435456
 105 002c 0192     		str	r2, [sp, #4]
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 106              		.loc 1 105 3 view .LVU16
 107 002e 019A     		ldr	r2, [sp, #4]
 108              	.LBE6:
 105:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 109              		.loc 1 105 3 view .LVU17
 106:Core/Src/main.c **** 
 110              		.loc 1 106 3 view .LVU18
 111              	.LBB7:
 106:Core/Src/main.c **** 
 112              		.loc 1 106 3 view .LVU19
 113 0030 0293     		str	r3, [sp, #8]
 106:Core/Src/main.c **** 
 114              		.loc 1 106 3 view .LVU20
 115 0032 1B4B     		ldr	r3, .L9+4
 116 0034 1A68     		ldr	r2, [r3]
 117 0036 42F48042 		orr	r2, r2, #16384
 118 003a 1A60     		str	r2, [r3]
 106:Core/Src/main.c **** 
 119              		.loc 1 106 3 view .LVU21
 120 003c 1B68     		ldr	r3, [r3]
 121 003e 03F48043 		and	r3, r3, #16384
 122 0042 0293     		str	r3, [sp, #8]
 106:Core/Src/main.c **** 
 123              		.loc 1 106 3 view .LVU22
 124 0044 029B     		ldr	r3, [sp, #8]
 125              	.LBE7:
 106:Core/Src/main.c **** 
 126              		.loc 1 106 3 view .LVU23
 111:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127              		.loc 1 111 3 view .LVU24
 111:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 128              		.loc 1 111 36 is_stmt 0 view .LVU25
 129 0046 0123     		movs	r3, #1
 130 0048 0893     		str	r3, [sp, #32]
 112:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131              		.loc 1 112 3 is_stmt 1 view .LVU26
 112:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 112 30 is_stmt 0 view .LVU27
 133 004a 4FF48033 		mov	r3, #65536
 134 004e 0993     		str	r3, [sp, #36]
 113:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 135              		.loc 1 113 3 is_stmt 1 view .LVU28
 113:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136              		.loc 1 113 34 is_stmt 0 view .LVU29
 137 0050 0223     		movs	r3, #2
 138 0052 0E93     		str	r3, [sp, #56]
 114:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 9


 139              		.loc 1 114 3 is_stmt 1 view .LVU30
 114:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 140              		.loc 1 114 35 is_stmt 0 view .LVU31
 141 0054 4FF48002 		mov	r2, #4194304
 142 0058 0F92     		str	r2, [sp, #60]
 115:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 143              		.loc 1 115 3 is_stmt 1 view .LVU32
 115:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 144              		.loc 1 115 30 is_stmt 0 view .LVU33
 145 005a 0422     		movs	r2, #4
 146 005c 1092     		str	r2, [sp, #64]
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 147              		.loc 1 116 3 is_stmt 1 view .LVU34
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148              		.loc 1 116 30 is_stmt 0 view .LVU35
 149 005e 4822     		movs	r2, #72
 150 0060 1192     		str	r2, [sp, #68]
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 151              		.loc 1 117 3 is_stmt 1 view .LVU36
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 152              		.loc 1 117 30 is_stmt 0 view .LVU37
 153 0062 1293     		str	r3, [sp, #72]
 118:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154              		.loc 1 118 3 is_stmt 1 view .LVU38
 118:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155              		.loc 1 118 30 is_stmt 0 view .LVU39
 156 0064 0323     		movs	r3, #3
 157 0066 1393     		str	r3, [sp, #76]
 119:Core/Src/main.c ****   {
 158              		.loc 1 119 3 is_stmt 1 view .LVU40
 119:Core/Src/main.c ****   {
 159              		.loc 1 119 7 is_stmt 0 view .LVU41
 160 0068 08A8     		add	r0, sp, #32
 161 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 162              	.LVL1:
 119:Core/Src/main.c ****   {
 163              		.loc 1 119 6 view .LVU42
 164 006e 80B9     		cbnz	r0, .L7
 126:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 165              		.loc 1 126 3 is_stmt 1 view .LVU43
 126:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166              		.loc 1 126 31 is_stmt 0 view .LVU44
 167 0070 0F23     		movs	r3, #15
 168 0072 0393     		str	r3, [sp, #12]
 128:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169              		.loc 1 128 3 is_stmt 1 view .LVU45
 128:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170              		.loc 1 128 34 is_stmt 0 view .LVU46
 171 0074 0221     		movs	r1, #2
 172 0076 0491     		str	r1, [sp, #16]
 129:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 173              		.loc 1 129 3 is_stmt 1 view .LVU47
 129:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 174              		.loc 1 129 35 is_stmt 0 view .LVU48
 175 0078 0023     		movs	r3, #0
 176 007a 0593     		str	r3, [sp, #20]
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 10


 177              		.loc 1 130 3 is_stmt 1 view .LVU49
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178              		.loc 1 130 36 is_stmt 0 view .LVU50
 179 007c 4FF48052 		mov	r2, #4096
 180 0080 0692     		str	r2, [sp, #24]
 131:Core/Src/main.c **** 
 181              		.loc 1 131 3 is_stmt 1 view .LVU51
 131:Core/Src/main.c **** 
 182              		.loc 1 131 36 is_stmt 0 view .LVU52
 183 0082 0793     		str	r3, [sp, #28]
 133:Core/Src/main.c ****   {
 184              		.loc 1 133 3 is_stmt 1 view .LVU53
 133:Core/Src/main.c ****   {
 185              		.loc 1 133 7 is_stmt 0 view .LVU54
 186 0084 03A8     		add	r0, sp, #12
 187 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 188              	.LVL2:
 133:Core/Src/main.c ****   {
 189              		.loc 1 133 6 view .LVU55
 190 008a 20B9     		cbnz	r0, .L8
 137:Core/Src/main.c **** 
 191              		.loc 1 137 1 view .LVU56
 192 008c 15B0     		add	sp, sp, #84
 193              	.LCFI2:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 008e 5DF804FB 		ldr	pc, [sp], #4
 198              	.L7:
 199              	.LCFI3:
 200              		.cfi_restore_state
 121:Core/Src/main.c ****   }
 201              		.loc 1 121 5 is_stmt 1 view .LVU57
 202 0092 FFF7FEFF 		bl	Error_Handler
 203              	.LVL3:
 204              	.L8:
 135:Core/Src/main.c ****   }
 205              		.loc 1 135 5 view .LVU58
 206 0096 FFF7FEFF 		bl	Error_Handler
 207              	.LVL4:
 208              	.L10:
 209 009a 00BF     		.align	2
 210              	.L9:
 211 009c 00380240 		.word	1073887232
 212 00a0 00700040 		.word	1073770496
 213              		.cfi_endproc
 214              	.LFE131:
 216              		.section	.text.main,"ax",%progbits
 217              		.align	1
 218              		.global	main
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	main:
 224              	.LFB130:
  63:Core/Src/main.c **** HAL_Init ();
 225              		.loc 1 63 16 view -0
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 11


 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI4:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
  64:Core/Src/main.c **** SystemClock_Config ();
 234              		.loc 1 64 1 view .LVU60
 235 0002 FFF7FEFF 		bl	HAL_Init
 236              	.LVL5:
  65:Core/Src/main.c **** MX_GPIO_Init();
 237              		.loc 1 65 1 view .LVU61
 238 0006 FFF7FEFF 		bl	SystemClock_Config
 239              	.LVL6:
  66:Core/Src/main.c **** while(1){
 240              		.loc 1 66 1 view .LVU62
 241 000a FFF7FEFF 		bl	MX_GPIO_Init
 242              	.LVL7:
 243 000e 29E0     		b	.L16
 244              	.LVL8:
 245              	.L13:
 246              	.LBB8:
  71:Core/Src/main.c **** 
 247              		.loc 1 71 35 discriminator 3 view .LVU63
  71:Core/Src/main.c **** 
 248              		.loc 1 71 30 discriminator 3 view .LVU64
  71:Core/Src/main.c **** 
 249              		.loc 1 71 32 is_stmt 0 discriminator 3 view .LVU65
 250 0010 0133     		adds	r3, r3, #1
 251              	.LVL9:
 252              	.L12:
  71:Core/Src/main.c **** 
 253              		.loc 1 71 18 is_stmt 1 discriminator 1 view .LVU66
  71:Core/Src/main.c **** 
 254              		.loc 1 71 4 is_stmt 0 discriminator 1 view .LVU67
 255 0012 154A     		ldr	r2, .L18
 256 0014 9342     		cmp	r3, r2
 257 0016 FBDD     		ble	.L13
 258              	.LBE8:
  73:Core/Src/main.c **** 	  gpio_led_state ( LED4_GREEN_ID , 1); // turn on
 259              		.loc 1 73 4 is_stmt 1 view .LVU68
 260 0018 0121     		movs	r1, #1
 261 001a 0846     		mov	r0, r1
 262 001c FFF7FEFF 		bl	gpio_led_state
 263              	.LVL10:
  74:Core/Src/main.c **** 	  gpio_led_state ( LED5_RED_ID , 0); // turn off
 264              		.loc 1 74 4 view .LVU69
 265 0020 0121     		movs	r1, #1
 266 0022 0220     		movs	r0, #2
 267 0024 FFF7FEFF 		bl	gpio_led_state
 268              	.LVL11:
  75:Core/Src/main.c **** 	  gpio_led_state ( LED6_BLUE_ID , 0); // turn off
 269              		.loc 1 75 4 view .LVU70
 270 0028 0021     		movs	r1, #0
 271 002a 0320     		movs	r0, #3
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 12


 272 002c FFF7FEFF 		bl	gpio_led_state
 273              	.LVL12:
  76:Core/Src/main.c **** 
 274              		.loc 1 76 4 view .LVU71
 275 0030 0021     		movs	r1, #0
 276 0032 0420     		movs	r0, #4
 277 0034 FFF7FEFF 		bl	gpio_led_state
 278              	.LVL13:
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 279              		.loc 1 78 4 view .LVU72
 280              	.LBB9:
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 281              		.loc 1 78 9 view .LVU73
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 282              		.loc 1 78 13 is_stmt 0 view .LVU74
 283 0038 0023     		movs	r3, #0
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 284              		.loc 1 78 4 view .LVU75
 285 003a 00E0     		b	.L14
 286              	.LVL14:
 287              	.L15:
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 288              		.loc 1 78 35 is_stmt 1 discriminator 3 view .LVU76
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 289              		.loc 1 78 30 discriminator 3 view .LVU77
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 290              		.loc 1 78 32 is_stmt 0 discriminator 3 view .LVU78
 291 003c 0133     		adds	r3, r3, #1
 292              	.LVL15:
 293              	.L14:
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 294              		.loc 1 78 18 is_stmt 1 discriminator 1 view .LVU79
  78:Core/Src/main.c **** 	  gpio_led_state ( LED3_ORANGE_ID , 0); // turn off
 295              		.loc 1 78 4 is_stmt 0 discriminator 1 view .LVU80
 296 003e 0A4A     		ldr	r2, .L18
 297 0040 9342     		cmp	r3, r2
 298 0042 FBDD     		ble	.L15
 299              	.LBE9:
  79:Core/Src/main.c **** 	  gpio_led_state ( LED4_GREEN_ID , 0); // turn off
 300              		.loc 1 79 4 is_stmt 1 view .LVU81
 301 0044 0021     		movs	r1, #0
 302 0046 0120     		movs	r0, #1
 303 0048 FFF7FEFF 		bl	gpio_led_state
 304              	.LVL16:
  80:Core/Src/main.c **** 	  gpio_led_state ( LED5_RED_ID , 1); // turn on
 305              		.loc 1 80 4 view .LVU82
 306 004c 0021     		movs	r1, #0
 307 004e 0220     		movs	r0, #2
 308 0050 FFF7FEFF 		bl	gpio_led_state
 309              	.LVL17:
  81:Core/Src/main.c **** 	  gpio_led_state ( LED6_BLUE_ID , 1); // turn on
 310              		.loc 1 81 4 view .LVU83
 311 0054 0121     		movs	r1, #1
 312 0056 0320     		movs	r0, #3
 313 0058 FFF7FEFF 		bl	gpio_led_state
 314              	.LVL18:
  82:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 13


 315              		.loc 1 82 4 view .LVU84
 316 005c 0121     		movs	r1, #1
 317 005e 0420     		movs	r0, #4
 318 0060 FFF7FEFF 		bl	gpio_led_state
 319              	.LVL19:
  68:Core/Src/main.c ****   {
 320              		.loc 1 68 9 view .LVU85
 321              	.L16:
  67:Core/Src/main.c ****   while (1)
 322              		.loc 1 67 1 view .LVU86
  68:Core/Src/main.c ****   {
 323              		.loc 1 68 3 view .LVU87
  71:Core/Src/main.c **** 
 324              		.loc 1 71 4 view .LVU88
 325              	.LBB10:
  71:Core/Src/main.c **** 
 326              		.loc 1 71 9 view .LVU89
  71:Core/Src/main.c **** 
 327              		.loc 1 71 13 is_stmt 0 view .LVU90
 328 0064 0023     		movs	r3, #0
  71:Core/Src/main.c **** 
 329              		.loc 1 71 4 view .LVU91
 330 0066 D4E7     		b	.L12
 331              	.L19:
 332              		.align	2
 333              	.L18:
 334 0068 3F420F00 		.word	999999
 335              	.LBE10:
 336              		.cfi_endproc
 337              	.LFE130:
 339              		.text
 340              	.Letext0:
 341              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 342              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 343              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 344              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 345              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 346              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 347              		.file 9 "Core/Inc/gpio.h"
 348              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 349              		.file 11 "<built-in>"
ARM GAS  C:\Users\38595\AppData\Local\Temp\cccntZX2.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:20     .text.Error_Handler:00000000 $t
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:211    .text.SystemClock_Config:0000009c $d
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:217    .text.main:00000000 $t
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:223    .text.main:00000000 main
C:\Users\38595\AppData\Local\Temp\cccntZX2.s:334    .text.main:00000068 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
gpio_led_state
